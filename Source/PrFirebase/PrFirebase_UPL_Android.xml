<?xml version="1.0" encoding="utf-8"?>
<root xmlns:android="http://schemas.android.com/apk/res/android">
	<init>
		<log text="Firebase Initialization"/>
		<setBoolFromProperty result="bEnabled" ini="Engine" section="/Script/PrFirebase.PrFirebaseSettings" property="bFirebaseEnable" default="false"/>
		<setStringFromProperty result="ConfigFile" ini="Engine" section="/Script/PrFirebase.PrFirebaseSettings" property="FirebaseAndroidConfig" default="Config/Firebase/google-services.json"/>
	</init>

	<gradleProperties>
		<if condition="bEnabled">
			<true>
				<insert>
					android.useAndroidX=true
					android.enableJetifier=true
				</insert>
			</true>
		</if>
	</gradleProperties>

	<proguardAdditions>
		<if condition="bEnabled">
			<true>
				<insert>
					-keepattributes *Annotation*
					-keepattributes SourceFile,LineNumberTable
					-keep public class * extends java.lang.Exception
					-keep class com.crashlytics.** { *; }
					-dontwarn com.crashlytics.**
				</insert>
			</true>
		</if>
	</proguardAdditions>

	<buildscriptGradleAdditions>
		<if condition="bEnabled">
			<true>
				<insert>
					repositories {
						google()
					}

					dependencies {
						classpath 'com.google.gms:google-services:4.3.4'
						classpath 'com.google.firebase:firebase-crashlytics-gradle:2.4.1'
					}
				</insert>
			</true>
		</if>
	</buildscriptGradleAdditions>

	<buildGradleAdditions>
		<if condition="bEnabled">
			<true>
				<insert>
					dependencies {
						implementation 'com.google.firebase:firebase-analytics:18.0.0'
						implementation 'com.google.firebase:firebase-crashlytics:17.3.0'
						implementation 'com.google.firebase:firebase-crashlytics-ndk:17.3.0'

						implementation 'com.google.android.gms:play-services-games:21.0.0'
					}

					apply plugin: 'com.android.application'
					apply plugin: 'com.google.gms.google-services'
					apply plugin: 'com.google.firebase.crashlytics'

					android {
						buildTypes {
							release {
								firebaseCrashlytics {
									nativeSymbolUploadEnabled true
									strippedNativeLibsDir 'build/intermediates/stripped_native_libs/release/out/lib'
									unstrippedNativeLibsDir 'src/main/jniLibs'
								}
							}
							debug {
								firebaseCrashlytics {
									nativeSymbolUploadEnabled true
									strippedNativeLibsDir 'build/intermediates/stripped_native_libs/debug/out/lib'
									unstrippedNativeLibsDir 'src/main/jniLibs'
								}
							}
						}
					}

					allprojects {
						def mappings = [
							'android.support.annotation': 'androidx.annotation',
							'android.arch.lifecycle': 'androidx.lifecycle',
							'android.support.v4.app.NotificationCompat': 'androidx.core.app.NotificationCompat',
							'android.support.v4.app.NotificationManagerCompat': 'androidx.core.app.NotificationManagerCompat',
							'android.support.v4.app.ActivityCompat': 'androidx.core.app.ActivityCompat',
							'android.support.v4.content.ContextCompat': 'androidx.core.content.ContextCompat',
							'android.support.v4.content.FileProvider': 'androidx.core.content.FileProvider',
							'android.support.v13.app.FragmentCompat': 'androidx.legacy.app.FragmentCompat',
							'android.arch.lifecycle.Lifecycle': 'androidx.lifecycle.Lifecycle',
							'android.arch.lifecycle.LifecycleObserver': 'androidx.lifecycle.LifecycleObserver',
							'android.arch.lifecycle.OnLifecycleEvent': 'androidx.lifecycle.OnLifecycleEvent',
							'android.arch.lifecycle.ProcessLifecycleOwner': 'androidx.lifecycle.ProcessLifecycleOwner',
						]

						afterEvaluate { project ->
							project.rootProject.projectDir.traverse(type: groovy.io.FileType.FILES, nameFilter: ~/.*\.java$/) { f ->
								mappings.each { entry ->
									if (f.getText('UTF-8').contains(entry.key)) {
										println "Updating ${entry.key} to ${entry.value} in file ${f}"
										ant.replace(file: f, token: entry.key, value: entry.value)
									}
								}
							}
						}
					}
				</insert>
			</true>
		</if>
	</buildGradleAdditions>

	<prebuildCopies>
		<if condition="bEnabled">
			<true>
				<copyDir src="$S(PluginDir)/External/Android" dst="$S(BuildDir)/src"/>
				<copyFile src="$S(PluginDir)/../../../../$S(ConfigFile)" dst="$S(BuildDir)/gradle/app/google-services.json" force="false"/>
				<copyFile src="$S(PluginDir)/../../../../$S(ConfigFile)" dst="$S(BuildDir)/gradle/app/src/debug/google-services.json" force="false"/>
				<copyFile src="$S(PluginDir)/../../../../$S(ConfigFile)" dst="$S(BuildDir)/gradle/app/src/release/google-services.json" force="false"/>
			</true>
		</if>
	</prebuildCopies>
	
	<gameActivityImportAdditions>
		<if condition="bEnabled">
			<true>
				<insert>
					<![CDATA[
						import com.pr.firebase.*;
					]]>
				</insert>
			</true>
		</if>
	</gameActivityImportAdditions>

	<gameActivityClassAdditions>
		<if condition="bEnabled">
			<true>
				<insert>
					<![CDATA[
						public void AndroidThunkJava_Firebase_Initialize()
						{
							
						}

						public void AndroidThunkJava_FirebaseCrashlytics_SetUserIdentifier(String UserIdentifier)
						{
							PrFirebase.crashlyticsProxy().setUserIdentifier(UserIdentifier);
						}

						public void AndroidThunkJava_FirebaseCrashlytics_WriteLog(String Log)
						{
							PrFirebase.crashlyticsProxy().writeLog(Log);
						}

						public void AndroidThunkJava_FirebaseCrashlytics_WriteError(String Log)
						{
							PrFirebase.crashlyticsProxy().writeException(new RuntimeException(String.format("%s", Log)));
						}

						public void AndroidThunkJava_FirebaseCrashlytics_AddAttribute(String Key, String Value)
						{
							PrFirebase.crashlyticsProxy().addAttribute(Key, Value);
						}
					]]>
				</insert>
			</true>
		</if>
	</gameActivityClassAdditions>

	<gameActivityOnCreateAdditions>
		<if condition="bEnabled">
			<true>
				<insert>
					<![CDATA[
						PrFirebase.initialize(this);
					]]>
				</insert>
			</true>
		</if>
	</gameActivityOnCreateAdditions>

</root>
